stages:
  - test
  - build
  - deploy

include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml

variables:
  SPHINX_IMAGE: musicscience37/sphinx-doxygen:gcc13

pre-commit:
  stage: test
  image: ${SPHINX_IMAGE}
  variables:
    POETRY_CACHE_DIR: ${CI_PROJECT_DIR}/.poetry-cache
  script:
    - poetry config virtualenvs.in-project true
    - poetry env use 3.13
    - poetry sync
    - poetry run pre-commit run --all-files
  cache:
    - key:
        prefix: poetry-${CI_JOB_NAME}
        files:
          - poetry.lock
      paths:
        - .poetry-cache
  needs: []

spell check:
  stage: test
  needs: []
  image: node
  script:
    - npm install -g cspell
    - cspell lint .
  interruptible: true

build:
  stage: build
  image: ${SPHINX_IMAGE}
  variables:
    PYDEVD_DISABLE_FILE_VALIDATION: 1
    POETRY_CACHE_DIR: ${CI_PROJECT_DIR}/.poetry-cache
  script:
    - poetry config virtualenvs.in-project true
    - poetry env use 3.13
    - poetry sync
    - poetry run ./build.sh
  cache:
    - key:
        prefix: poetry-${CI_JOB_NAME}
        files:
          - poetry.lock
      paths:
        - .poetry-cache
    - key:
        prefix: jupyter-${CI_JOB_NAME}
        files:
          - poetry.lock
      paths:
        - build/jupyter_cache
  artifacts:
    paths:
      - build
    expire_in: "1 week"
  needs: []

pages:
  stage: deploy
  image: alpine
  script:
    - mv build/html public
  artifacts:
    paths:
      - public
  only:
    - main
  needs: [build]
